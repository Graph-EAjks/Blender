diff -Naur ispc-1.28.0.orig/CMakeLists.txt ispc-1.28.0/CMakeLists.txt
--- ispc-1.28.0.orig/CMakeLists.txt	2025-08-12 05:34:22.000000000 -0700
+++ ispc-1.28.0/CMakeLists.txt	2025-08-21 11:55:15.223379600 -0700
@@ -119,6 +119,29 @@
     set(ISPC_LIBRARY_JIT OFF CACHE BOOL "Build ISPC as a library with JIT capabilities" FORCE)
 endif()
 
+# Link against libstdc++.a which must be provided to the linker after
+# LLVM and CLang libraries.
+# This is needed because some of LLVM/CLang dependencies are using
+# std::make_shared, which is defined in one of those:
+#  - libclang-cpp.so
+#  - libstdc++.a
+# Using the former one is tricky because then generated binary depends
+# on a library which is outside of the LD_LIBRARY_PATH.
+#
+# Hence, using C++ implementation from G++ which seems to work just fine.
+# In fact, from investigation seems that libclang-cpp.so itself is pulling
+# std::_Sp_make_shared_tag from G++'s libstdc++.a.
+if(UNIX AND NOT APPLE)
+    execute_process(
+        COMMAND g++ --print-file-name libstdc++.a
+        OUTPUT_VARIABLE GCC_LIBSTDCXX_A
+        OUTPUT_STRIP_TRAILING_WHITESPACE
+    )
+    if(GCC_LIBSTDCXX_A AND EXISTS ${GCC_LIBSTDCXX_A})
+        target_link_libraries(${PROJECT_NAME} ${GCC_LIBSTDCXX_A})
+    endif()
+endif()
+
 # Build target for utility checking host ISA
 # This target should be defined before the inclusion of FindLLVM.cmake because
 # we want to build check_isa without LLVM installed.
@@ -669,7 +692,7 @@
 
 # Include directories
 list(APPEND INCLUDE_DIRECTORIES
-    ${LLVM_INCLUDE_DIRS}
+    ${LLVM_INCLUDE_DIRS} ${CLANG_INCLUDE_DIRS}
     ${XE_DEPS_DIR}/include
     ${CMAKE_CURRENT_SOURCE_DIR}/src
     ${CMAKE_CURRENT_SOURCE_DIR}/src/include
@@ -819,7 +842,7 @@
                  NAMES
                     "${CMAKE_STATIC_LIBRARY_PREFIX}${clangLib}${CMAKE_STATIC_LIBRARY_SUFFIX}"
                     clang-cpp
-                 HINTS ${LLVM_LIBRARY_DIRS})
+                 HINTS ${LLVM_LIBRARY_DIRS} ${CLANG_LIBRARY_DIR})
     if (NOT ${${clangLib}Path} IN_LIST CLANG_LIBRARY_FULL_PATH_LIST)
         list(APPEND CLANG_LIBRARY_FULL_PATH_LIST ${${clangLib}Path})
     endif()
diff -Naur ispc-1.28.0.orig/cmake/GenerateBuiltins.cmake ispc-1.28.0/cmake/GenerateBuiltins.cmake
--- ispc-1.28.0.orig/cmake/GenerateBuiltins.cmake	2025-08-12 05:34:22.000000000 -0700
+++ ispc-1.28.0/cmake/GenerateBuiltins.cmake	2025-08-21 12:09:18.535820200 -0700
@@ -334,7 +334,7 @@
 
     add_custom_command(
         OUTPUT ${bc}
-        COMMAND cat ${input} | \"${LLVM_AS_EXECUTABLE}\" -o ${bc}
+        COMMAND ${CMAKE_COMMAND} -E cat ${input} | \"${LLVM_AS_EXECUTABLE}\" -o ${bc}
         DEPENDS ${input}
         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
         )
@@ -405,7 +405,8 @@
     endif()
 
     if (ISPC_LINUX_TARGET AND X86_ENABLED)
-        builtin_to_cpp(32 linux x86)
+        # Blender: disable 32bit due to build issues on Linux and being unnecessary.
+        #builtin_to_cpp(32 linux x86)
         builtin_to_cpp(64 linux x86)
     endif()
 
